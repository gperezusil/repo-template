name: Deploy to AKS

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      replicas:
        required: false
        type: number
        default: 1
      container_port:
        required: false
        type: number
        default: 8080
      azure_oidc:
        required: false
        type: boolean
        default: false
      kubeconfig:
        required: false
        type: string

    secrets:
      AZURE_CLIENT_ID:
        required: false
      AZURE_TENANT_ID:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: false
      KUBE_CONFIG_DATA:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        if: inputs.azure_oidc == true
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Cargar SetupConfig
        env:
          KUBECONFIG_DATA: ${{ inputs.kubeconfig || secrets.KUBE_CONFIG_DATA }}
        if: env.KUBECONFIG_DATA != ''
        run: |
          echo "$KUBECONFIG_DATA" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Preparando y actualizando el manifiesto
        run: |
          sed -e "s|{{IMAGE_NAME}}|${{ inputs.image_name }}|g" \
              -e "s|{{IMAGE_TAG}}|${{ inputs.image_tag }}|g" \
              -e "s|{{REPLICAS}}|${{ inputs.replicas }}|g" \
              -e "s|{{CONTAINER_PORT}}|${{ inputs.container_port }}|g" \
              deployment/deployment-aks.yaml > dynamic-deploy.yaml

      - name: Aplicando el manifiesto
        run: kubectl apply -f dynamic-deploy.yaml

      - name: Espera el rollout
        run: |
          kubectl rollout status deployment/my-app