name: DAST Scan

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string

jobs:
  dast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load -i image.tar

      # üîπ Levantar la aplicaci√≥n con network host
      - name: Run application container
        run: |
          docker run -d --network host --name app-under-test \
            ${{ inputs.image_name }}:ci-${{ github.run_id }}
          
          echo "Esperando a que la app arranque..."
          sleep 10
          
          # Verificar que la aplicaci√≥n est√° respondiendo
          for i in {1..30}; do
            if curl -s http://localhost:8000 > /dev/null 2>&1; then
              echo "‚úÖ Aplicaci√≥n respondiendo correctamente"
              curl -v http://localhost:8000
              break
            fi
            echo "‚è≥ Esperando... intento $i/30"
            sleep 2
          done

      # üîπ Verificar estado antes del escaneo
      - name: Verify application is running
        run: |
          echo "=== Estado de contenedores ==="
          docker ps -a
          
          echo "=== Logs de la aplicaci√≥n ==="
          docker logs app-under-test
          
          echo "=== Probando conexi√≥n ==="
          curl -v http://localhost:8000 || echo "‚ùå No se pudo conectar"
          
          echo "=== Puertos en escucha ==="
          netstat -tlnp || ss -tlnp

      # üîπ Ejecutar OWASP ZAP Baseline Scan
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8000'
          cmd_options: '-a'
          allow_issue_writing: false
        continue-on-error: true  # Para ver los logs aunque falle

      # üîπ Upload reports si existen
      - name: Upload ZAP reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: |
            report_*.html
            report_*.json
            report_*.md
          if-no-files-found: ignore

      # üîπ Cleanup
      - name: Stop and remove container
        if: always()
        run: |
          echo "=== Logs finales de la aplicaci√≥n ==="
          docker logs app-under-test || true
          docker stop app-under-test || true
          docker rm app-under-test || true