name: DAST Scan

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string

jobs:
  dast:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load -i image.tar

      - name: Run application container
        run: |
          docker run -d --network host --name app-under-test \
            ${{ inputs.image_name }}:ci-${{ github.run_id }}
          echo "Esperando a que la app arranque..."
          sleep 10
          
          # Verificar que la aplicaci√≥n est√° respondiendo
          for i in {1..30}; do
            if curl -s http://localhost:8000 > /dev/null 2>&1; then
              echo "‚úÖ Aplicaci√≥n respondiendo correctamente"
              break
            fi
            echo "‚è≥ Esperando... intento $i/30"
            sleep 2
          done

      - name: Prepare ZAP workspace
        run: |
          mkdir -p zap-reports
          chmod 777 zap-reports

      # üîπ Ejecutar ZAP con formato XML (necesario para SARIF)
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --rm \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            --network host \
            --user root \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
            -t http://localhost:8000 \
            -r zap-report.html \
            -J zap-report.json \
            -w zap-report.md \
            -x zap-report.xml \
            -a || true
        continue-on-error: true

      # üîπ Verificar archivos generados
      - name: Debug - List generated files
        if: always()
        run: |
          echo "=== Archivos generados en zap-reports ==="
          ls -la zap-reports/

      # üîπ Convertir XML de ZAP a SARIF usando action oficial
      - name: Convert ZAP XML to SARIF
        if: always()
        uses: SvanBoxel/zaproxy-to-ghas@main
        with:
          alert_file: zap-reports/zap-report.xml
          output_file: zap-reports/zap-report.sarif

      # üîπ Subir SARIF a GitHub Security
      - name: Upload ZAP SARIF report to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: zap-reports/zap-report.sarif
          category: zap-scan

      - name: Stop and remove container
        if: always()
        run: |
          docker stop app-under-test || true
          docker rm app-under-test || true