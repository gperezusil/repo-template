name: DAST Scan

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string

jobs:
  dast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load -i image.tar

      # üîπ Levantar la aplicaci√≥n
      - name: Run application container
        run: |
          docker run -d --network host --name app-under-test \
            ${{ inputs.image_name }}:ci-${{ github.run_id }}
          
          echo "Esperando a que la app arranque..."
          sleep 5

      # üîπ DIAGN√ìSTICO - Ver qu√© est√° pasando
      - name: Debug - Check container status and logs
        run: |
          echo "=== Estado del contenedor ==="
          docker ps -a | grep app-under-test
          
          echo ""
          echo "=== LOGS COMPLETOS DE LA APLICACI√ìN ==="
          docker logs app-under-test 2>&1
          
          echo ""
          echo "=== Verificar si el proceso est√° corriendo ==="
          docker top app-under-test || echo "El contenedor no est√° corriendo"

      # üîπ Verificar si la app est√° respondiendo
      - name: Verify application is running
        run: |
          # Intentar conectar
          for i in {1..10}; do
            if curl -s http://localhost:8000 > /dev/null 2>&1; then
              echo "‚úÖ Aplicaci√≥n respondiendo correctamente"
              curl http://localhost:8000
              exit 0
            fi
            echo "‚è≥ Intento $i/10 - App no responde a√∫n"
            sleep 2
          done
          
          echo "‚ùå La aplicaci√≥n no est√° respondiendo"
          exit 1

      # üîπ Ejecutar OWASP ZAP solo si la app est√° corriendo
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8000'
          cmd_options: '-a'
          allow_issue_writing: false

      # üîπ Cleanup
      - name: Stop and remove container
        if: always()
        run: |
          docker stop app-under-test || true
          docker rm app-under-test || true